// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query.proto

package accounts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TransactionType int32

const (
	TransactionType_Credit TransactionType = 0
	TransactionType_Debit  TransactionType = 1
)

var TransactionType_name = map[int32]string{
	0: "Credit",
	1: "Debit",
}
var TransactionType_value = map[string]int32{
	"Credit": 0,
	"Debit":  1,
}

func (x TransactionType) String() string {
	return proto.EnumName(TransactionType_name, int32(x))
}
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_query_ae52d9508baed0d7, []int{0}
}

type ListAccountsRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAccountsRequest) Reset()         { *m = ListAccountsRequest{} }
func (m *ListAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAccountsRequest) ProtoMessage()    {}
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_ae52d9508baed0d7, []int{0}
}
func (m *ListAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAccountsRequest.Unmarshal(m, b)
}
func (m *ListAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAccountsRequest.Marshal(b, m, deterministic)
}
func (dst *ListAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAccountsRequest.Merge(dst, src)
}
func (m *ListAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAccountsRequest.Size(m)
}
func (m *ListAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAccountsRequest proto.InternalMessageInfo

func (m *ListAccountsRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type AccountInfo struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Balance              int64    `protobuf:"varint,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountInfo) Reset()         { *m = AccountInfo{} }
func (m *AccountInfo) String() string { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()    {}
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_ae52d9508baed0d7, []int{1}
}
func (m *AccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountInfo.Unmarshal(m, b)
}
func (m *AccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountInfo.Marshal(b, m, deterministic)
}
func (dst *AccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountInfo.Merge(dst, src)
}
func (m *AccountInfo) XXX_Size() int {
	return xxx_messageInfo_AccountInfo.Size(m)
}
func (m *AccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AccountInfo proto.InternalMessageInfo

func (m *AccountInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AccountInfo) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type ListTransactionsRequest struct {
	AccountID            string   `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTransactionsRequest) Reset()         { *m = ListTransactionsRequest{} }
func (m *ListTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTransactionsRequest) ProtoMessage()    {}
func (*ListTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_ae52d9508baed0d7, []int{2}
}
func (m *ListTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransactionsRequest.Unmarshal(m, b)
}
func (m *ListTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *ListTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransactionsRequest.Merge(dst, src)
}
func (m *ListTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTransactionsRequest.Size(m)
}
func (m *ListTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransactionsRequest proto.InternalMessageInfo

func (m *ListTransactionsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type TransactionInfo struct {
	AccountID            string          `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Amount               int64           `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 TransactionType `protobuf:"varint,3,opt,name=Type,proto3,enum=accounts.TransactionType" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TransactionInfo) Reset()         { *m = TransactionInfo{} }
func (m *TransactionInfo) String() string { return proto.CompactTextString(m) }
func (*TransactionInfo) ProtoMessage()    {}
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_query_ae52d9508baed0d7, []int{3}
}
func (m *TransactionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionInfo.Unmarshal(m, b)
}
func (m *TransactionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionInfo.Marshal(b, m, deterministic)
}
func (dst *TransactionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionInfo.Merge(dst, src)
}
func (m *TransactionInfo) XXX_Size() int {
	return xxx_messageInfo_TransactionInfo.Size(m)
}
func (m *TransactionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionInfo proto.InternalMessageInfo

func (m *TransactionInfo) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *TransactionInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransactionInfo) GetType() TransactionType {
	if m != nil {
		return m.Type
	}
	return TransactionType_Credit
}

func init() {
	proto.RegisterType((*ListAccountsRequest)(nil), "accounts.ListAccountsRequest")
	proto.RegisterType((*AccountInfo)(nil), "accounts.AccountInfo")
	proto.RegisterType((*ListTransactionsRequest)(nil), "accounts.ListTransactionsRequest")
	proto.RegisterType((*TransactionInfo)(nil), "accounts.TransactionInfo")
	proto.RegisterEnum("accounts.TransactionType", TransactionType_name, TransactionType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountsQueryClient is the client API for AccountsQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountsQueryClient interface {
	ListAccounts(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (AccountsQuery_ListAccountsClient, error)
	ListTransactions(ctx context.Context, in *ListTransactionsRequest, opts ...grpc.CallOption) (AccountsQuery_ListTransactionsClient, error)
}

type accountsQueryClient struct {
	cc *grpc.ClientConn
}

func NewAccountsQueryClient(cc *grpc.ClientConn) AccountsQueryClient {
	return &accountsQueryClient{cc}
}

func (c *accountsQueryClient) ListAccounts(ctx context.Context, in *ListAccountsRequest, opts ...grpc.CallOption) (AccountsQuery_ListAccountsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AccountsQuery_serviceDesc.Streams[0], "/accounts.AccountsQuery/ListAccounts", opts...)
	if err != nil {
		return nil, err
	}
	x := &accountsQueryListAccountsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AccountsQuery_ListAccountsClient interface {
	Recv() (*AccountInfo, error)
	grpc.ClientStream
}

type accountsQueryListAccountsClient struct {
	grpc.ClientStream
}

func (x *accountsQueryListAccountsClient) Recv() (*AccountInfo, error) {
	m := new(AccountInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *accountsQueryClient) ListTransactions(ctx context.Context, in *ListTransactionsRequest, opts ...grpc.CallOption) (AccountsQuery_ListTransactionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AccountsQuery_serviceDesc.Streams[1], "/accounts.AccountsQuery/ListTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &accountsQueryListTransactionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AccountsQuery_ListTransactionsClient interface {
	Recv() (*TransactionInfo, error)
	grpc.ClientStream
}

type accountsQueryListTransactionsClient struct {
	grpc.ClientStream
}

func (x *accountsQueryListTransactionsClient) Recv() (*TransactionInfo, error) {
	m := new(TransactionInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AccountsQueryServer is the server API for AccountsQuery service.
type AccountsQueryServer interface {
	ListAccounts(*ListAccountsRequest, AccountsQuery_ListAccountsServer) error
	ListTransactions(*ListTransactionsRequest, AccountsQuery_ListTransactionsServer) error
}

func RegisterAccountsQueryServer(s *grpc.Server, srv AccountsQueryServer) {
	s.RegisterService(&_AccountsQuery_serviceDesc, srv)
}

func _AccountsQuery_ListAccounts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListAccountsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AccountsQueryServer).ListAccounts(m, &accountsQueryListAccountsServer{stream})
}

type AccountsQuery_ListAccountsServer interface {
	Send(*AccountInfo) error
	grpc.ServerStream
}

type accountsQueryListAccountsServer struct {
	grpc.ServerStream
}

func (x *accountsQueryListAccountsServer) Send(m *AccountInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _AccountsQuery_ListTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListTransactionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AccountsQueryServer).ListTransactions(m, &accountsQueryListTransactionsServer{stream})
}

type AccountsQuery_ListTransactionsServer interface {
	Send(*TransactionInfo) error
	grpc.ServerStream
}

type accountsQueryListTransactionsServer struct {
	grpc.ServerStream
}

func (x *accountsQueryListTransactionsServer) Send(m *TransactionInfo) error {
	return x.ServerStream.SendMsg(m)
}

var _AccountsQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accounts.AccountsQuery",
	HandlerType: (*AccountsQueryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListAccounts",
			Handler:       _AccountsQuery_ListAccounts_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListTransactions",
			Handler:       _AccountsQuery_ListTransactions_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "query.proto",
}

func init() { proto.RegisterFile("query.proto", fileDescriptor_query_ae52d9508baed0d7) }

var fileDescriptor_query_ae52d9508baed0d7 = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x4d, 0xa7, 0xd5, 0x9e, 0xe9, 0x2c, 0x47, 0xd4, 0x3a, 0x14, 0x6a, 0x41, 0x28, 0x82,
	0x45, 0xe6, 0xc5, 0xae, 0xd5, 0x22, 0x14, 0xbc, 0x31, 0xec, 0x05, 0xb2, 0x1a, 0xa1, 0xa0, 0xc9,
	0xd6, 0xa6, 0xc2, 0x9e, 0xc9, 0x97, 0x94, 0xd4, 0x74, 0xcd, 0x46, 0xf1, 0x2e, 0xe7, 0xdf, 0xf7,
	0x9d, 0xf3, 0x0b, 0x0c, 0x97, 0x35, 0x2f, 0x57, 0xc9, 0xa2, 0x94, 0x4a, 0xe2, 0x01, 0xcb, 0x73,
	0x59, 0x0b, 0x55, 0x45, 0x37, 0x70, 0xf2, 0x5a, 0x54, 0xea, 0xd1, 0xc4, 0x94, 0x2f, 0x6b, 0x5e,
	0x29, 0x1c, 0x81, 0x93, 0xa5, 0x01, 0x09, 0x49, 0xec, 0x51, 0x27, 0x4b, 0xa3, 0x29, 0x0c, 0x4d,
	0x4b, 0x26, 0x3e, 0xe4, 0x76, 0x19, 0x03, 0xd8, 0x7f, 0x62, 0x9f, 0x4c, 0xe4, 0x3c, 0x70, 0x42,
	0x12, 0x0f, 0x68, 0x1b, 0x46, 0x53, 0x38, 0xd7, 0xfa, 0xb3, 0x92, 0x89, 0x8a, 0xe5, 0xaa, 0x90,
	0x62, 0xed, 0x71, 0x09, 0x9e, 0x59, 0x63, 0xad, 0xd5, 0x25, 0xa2, 0x6f, 0x38, 0xb6, 0x86, 0x1a,
	0xd7, 0x7f, 0x07, 0xf0, 0x0c, 0x5c, 0xf6, 0xa5, 0xdf, 0x66, 0x05, 0x13, 0xe1, 0x1d, 0xec, 0xce,
	0x56, 0x0b, 0x1e, 0x0c, 0x42, 0x12, 0x8f, 0x26, 0x17, 0x49, 0x7b, 0x7a, 0x62, 0xc9, 0xeb, 0x06,
	0xda, 0xb4, 0xdd, 0xc6, 0x1b, 0xbe, 0x3a, 0x85, 0x00, 0xee, 0x73, 0xc9, 0xdf, 0x0b, 0xe5, 0xef,
	0xa0, 0x07, 0x7b, 0x29, 0x9f, 0x17, 0xca, 0x27, 0x93, 0x1f, 0x02, 0x47, 0x2d, 0xb7, 0x37, 0x0d,
	0x17, 0x5f, 0xe0, 0xd0, 0x86, 0x89, 0x57, 0x9d, 0x59, 0x0f, 0xe4, 0xf1, 0x69, 0x57, 0xb6, 0xe0,
	0xde, 0x13, 0xa4, 0xe0, 0x6f, 0x43, 0xc3, 0xeb, 0x4d, 0xad, 0x1e, 0xa0, 0xe3, 0xfe, 0xdb, 0xfe,
	0x34, 0xe7, 0x6e, 0xf3, 0xf3, 0x0f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf2, 0xcc, 0x5e, 0x5d,
	0x08, 0x02, 0x00, 0x00,
}
